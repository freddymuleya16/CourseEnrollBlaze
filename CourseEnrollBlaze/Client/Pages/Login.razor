@page "/login"
@using CourseEnrollBlaze.Shared.Models;
@using CourseEnrollBlaze.Shared.RequestModels;
@layout EmptyLayout
@using CourseEnrollBlaze.Shared;  
@using CourseEnrollBlaze.Client.Authentication; 
@inject HttpClient httpClient
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager
@inject IJSRuntime js 
   
<main class="main-content  mt-0 bg-gray-500">
    <div class="page-header align-items-start min-vh-100"
      style="background-image: url('https://images.unsplash.com/photo-1497294815431-9365093b7331?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80');">
      <span class="mask bg-gradient-dark opacity-6"></span>
<div class="container my-auto">
    <div class="row">
        <div class="col-lg-4 col-md-8 col-12 mx-auto">
            <div class="card z-index-0 fadeIn3 fadeInBottom">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1">
                        <h4 class="text-white font-weight-bolder text-center mt-2 mb-0">Sign in</h4>
                        <div class="row mt-3">
                            <div class="col-2 text-center ms-auto">
                                <a class="btn btn-link px-3" href="javascript:;">
                                    <i class="fa fa-facebook text-white text-lg"></i>
                                </a>
                            </div>
                            <div class="col-2 text-center px-1">
                                <a class="btn btn-link px-3" href="javascript:;">
                                    <i class="fa fa-github text-white text-lg"></i>
                                </a>
                            </div>
                            <div class="col-2 text-center me-auto">
                                <a class="btn btn-link px-3" href="javascript:;">
                                    <i class="fa fa-google text-white text-lg"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <EditForm Model="@loginModel" OnValidSubmit="HandleSubmit" class="text-start">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                            
                        <div class="input-group input-group-outline my-3">
                            <label class="static-label">Email</label>
                                    <InputText id="email" @bind-Value="loginModel.Email" type="email" class="form-control" onfocus="focused(this)" onfocusout="defocused(this)" />
                        </div>
                        <div class="input-group input-group-outline mb-3">
                            <label class="static-label">Password</label>
                            <InputText  onfocus="focused(this)" onfocusout="defocused(this)"  id="password"  @bind-Value="loginModel.Password" type="password" class="form-control"/>
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>
                        <div class="form-check form-switch d-flex align-items-center mb-3">
                            <input class="form-check-input" type="checkbox" id="rememberMe" checked>
                            <label class="form-check-label mb-0 ms-3" for="rememberMe">Remember me</label>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn bg-gradient-primary w-100 my-4 mb-2">Sign in</button>
                        </div>
                        <p class="mt-4 text-sm text-center">
                            Don't have an account?
                            <a href="/register" class="text-primary text-gradient font-weight-bold">Sign up</a>
                        </p>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
<footer class="footer position-absolute bottom-2 py-2 w-100">
    <div class="container">
        <Footer />
        </div>
        </footer>
    </div>
</main>

 
@code {
    private LoginRequest loginModel = new LoginRequest();

    
    private async Task HandleSubmit()
    { 
        var result = await httpClient.PostAsJsonAsync("/api/UserAccount/Login",loginModel);

        if (result.IsSuccessStatusCode)
        {
            var userSession = await result.Content.ReadFromJsonAsync<UserSession>();
            var customAuthStateProvider = (CustomAuthenticationState)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(userSession);
            navigationManager.NavigateTo("/", true);


        }
        else if(result.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
            await js.InvokeVoidAsync("alert", "Invalid Email or Password");
            return;
            // Handle login failure, show error message to the user
            // Example: Display error message in a toast notification
            // Example: Set error message in a property to display in the UI
            // Example: Clear password field and focus on email field
        }
    }
}
